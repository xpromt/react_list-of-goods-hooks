{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","start","setStart","goods","setGoods","sortedAlpha","setSort","sortedByLength","setSortByLength","className","type","onClick","reverse","sort","b","a","localeCompare","length","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgGaC,EA7FO,WACpB,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAASF,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA+BJ,oBAAS,GAAxC,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0CN,oBAAS,GAAnD,mBAAOO,EAAP,KAAuBC,EAAvB,KA4BA,OACE,sBAAKC,UAAU,MAAf,UACE,wCACER,GACA,wBACES,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAMT,GAAS,IAH1B,mBAQF,4BACGD,GACC,qCACE,sBAAKQ,UAAU,WAAf,UACE,wBACEC,KAAK,SACLD,UAAU,gBACVE,QA7CE,WACdP,EAAS,YAAID,EAAMS,aAyCT,qBAOA,yBACEF,KAAK,SACLD,UAAU,gBACVE,QAhDD,WACXP,EAAS,YAAID,EAAMU,KAChBR,EAEG,SAACS,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,IAD1B,SAACC,EAAGD,GAAJ,OAAUC,EAAEC,cAAcF,OAGhCR,GAASD,IAuCC,gCAMGA,GAAe,iBAElB,yBACEK,KAAK,SACLD,UAAU,gBACVE,QA/CO,WACnBP,EAAS,YAAID,EAAMU,KACjBN,EACI,SAACQ,EAAGD,GAAJ,OAAUC,EAAEE,OAASH,EAAEG,QACvB,SAACH,EAAGC,GAAJ,OAAUA,EAAEE,OAASH,EAAEG,WAE7BT,GAAiBD,IAsCP,2BAMGA,GAAkB,gBAErB,wBACEG,KAAK,SACLD,UAAU,gBACVE,QA9CA,WACZP,EAASN,IA0CC,sBAQF,qBAAKW,UAAU,aAAf,SACE,6BACGN,EAAMe,KAAI,SAAAC,GAAI,OACb,6BAAgBA,GAAPA,mBC/F3BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f5971d98.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [start, setStart] = useState(false);\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [sortedAlpha, setSort] = useState(false);\n  const [sortedByLength, setSortByLength] = useState(false);\n\n  const reverse = () => {\n    setGoods([...goods.reverse()]);\n  };\n\n  const sort = () => {\n    setGoods([...goods.sort(\n      !sortedAlpha\n        ? (a, b) => a.localeCompare(b)\n        : (b, a) => a.localeCompare(b),\n    )]);\n    setSort(!sortedAlpha);\n  };\n\n  const sortByLength = () => {\n    setGoods([...goods.sort(\n      sortedByLength\n        ? (a, b) => a.length - b.length\n        : (b, a) => a.length - b.length,\n    )]);\n    setSortByLength(!sortedByLength);\n  };\n\n  const reset = () => {\n    setGoods(goodsFromServer);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!start && (\n        <button\n          type=\"button\"\n          className=\"btnblock__btn\"\n          onClick={() => setStart(true)}\n        >\n          Start\n        </button>\n      )}\n      <p>\n        {start && (\n          <>\n            <div className=\"btnblock\">\n              <button\n                type=\"button\"\n                className=\"btnblock__btn\"\n                onClick={reverse}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                className=\"btnblock__btn\"\n                onClick={sort}\n              >\n                Sort alphabetically\n                {sortedAlpha && ' descending' }\n              </button>\n              <button\n                type=\"button\"\n                className=\"btnblock__btn\"\n                onClick={sortByLength}\n              >\n                Sort by length\n                {sortedByLength && ' ascending' }\n              </button>\n              <button\n                type=\"button\"\n                className=\"btnblock__btn\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            </div>\n            <div className=\"goods-list\">\n              <ul>\n                {goods.map(good => (\n                  <li key={good}>{good}</li>\n                ))}\n              </ul>\n            </div>\n          </>\n        )}\n      </p>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}